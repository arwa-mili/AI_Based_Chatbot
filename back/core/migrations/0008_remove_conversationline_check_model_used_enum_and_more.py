# Generated by Django 5.2.5 on 2025-10-05 11:32

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_remove_conversation_language_and_more'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='conversationline',
            name='check_model_used_enum',
        ),
        migrations.AlterField(
            model_name='conversation',
            name='title_ar',
            field=models.CharField(default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='title_en',
            field=models.CharField(default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='conversationline',
            name='model_used',
            field=models.CharField(choices=[('Gemini', 'Gemini'), ('GPT', 'GPT'), ('DEEPSEEK', 'DEEPSEEK')], default='GPT', max_length=10),
        ),
        migrations.AlterField(
            model_name='conversationline',
            name='text_ar',
            field=models.TextField(default='  ', validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.AlterField(
            model_name='conversationline',
            name='text_en',
            field=models.TextField(default='  ', validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.AlterField(
            model_name='conversationline',
            name='text_html_ar',
            field=models.TextField(default='  ', validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.AlterField(
            model_name='conversationline',
            name='text_html_en',
            field=models.TextField(default='  ', validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.AddConstraint(
            model_name='conversationline',
            constraint=models.CheckConstraint(condition=models.Q(('model_used__in', ['Gemini', 'GPT', 'DEEPSEEK'])), name='check_model_used_enum'),
        ),
    ]
